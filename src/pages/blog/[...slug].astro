---
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'

import RootLayout from 'layouts/RootLayout.astro'
import Tag from 'components/design-system/Tag/index.astro'
import Comments from 'components/react/comments/Comments'
import { formatDate } from 'utils/date'
import { getPosts } from 'utils/blog'

export const getStaticPaths = async () => {
  const posts = await getPosts()

  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }))
}

const postToFind = await getCollection('blog', (entry) => entry.id === Astro.params.slug)
const post = postToFind[0]

export const prerender = true
---

<RootLayout title={post.data.title} description={post.data.description} image={post.data.hero.src}>
  <article class="grid w-full gap-4">
    <header class="grid">
      <h1 class="prose-h1">{post.data.title}</h1>
      <div class="grid gap-2 md:grid-cols-[max-content_1fr] md:gap-4">
        <p class="prose-body1 text-wrap text-object-low">
          {formatDate(post.data.date)} - {post.data.minutesRead}
        </p>
        <div class="flex space-x-2">
          {post.data.tags.map((tag) => <Tag>{tag}</Tag>)}
        </div>
      </div>
    </header>

    {
      post.data.hero && (
        <Image
          src={post.data.hero}
          alt={post.data.title}
          format="webp"
          class="aspect-[16/9] h-auto w-full max-w-4xl justify-self-center rounded-lg object-cover"
          loading="eager"
        />
      )
    }

    <section class="prose w-full max-w-none text-object-high" set:html={post.rendered?.html} />
  </article>
  <Comments discussionId={post.data.discussionId} client:only="react" />
</RootLayout>
